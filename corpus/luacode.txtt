========================
directlua
=======================
\directlua{
  texio.write_nl("Special chars: _ ^ & $ { } working.\string\n"
  .. "Backslashes need a bit of care.\string\n"
  .. "Sharps and tildes too: # doubled, but \string# and \string~")
  % a tex comment: no easy way to get a %
  tex.sprint("\string\\pi \string\\neq", tostring(math.pi))
  % we can use TeX macros
  tex.sprint("-", math.sqrt(\foo))
}
---------------------------
(document
  (lua
    (lua_cs)
    (text_group
      (begin_group)
      (text)
      (text_group (begin_group) (text) (end_group))
      (text)
      (cs)
      (cs)
      (text)
      (cs)
      (cs)
      (text)
      (cs)
      (text)
      (cs)
      (active_char)
      (text (comment))
      (cs)
      (escaped)
      (text)
      (cs)
      (escaped)
      (text (comment))
      (cs)
      (text)
      (end_group))))

========================
directlua with number
=======================
\directlua"7F{
  texio.write_nl("Special chars: _ ^ & $ { } working.\string\n"
  .. "Backslashes need a bit of care.\string\n"
  .. "Sharps and tildes too: # doubled, but \string# and \string~")
  % a tex comment: no easy way to get a %
  tex.sprint("\string\\pi \string\\neq", tostring(math.pi))
  % we can use TeX macros
  tex.sprint("-", math.sqrt(\foo))
}
---------------------------
(document
  (lua
    (lua_cs)
    (hexadecimal)
    (text_group
      (begin_group)
      (text)
      (text_group (begin_group) (text) (end_group))
      (text)
      (cs)
      (cs)
      (text)
      (cs)
      (cs)
      (text)
      (cs)
      (text)
      (cs)
      (active_char)
      (text (comment))
      (cs)
      (escaped)
      (text)
      (cs)
      (escaped)
      (text (comment))
      (cs)
      (text)
      (end_group))))

========================
latelua
=======================
\latelua{
  texio.write_nl("Special chars: _ ^ & $ { } working.\string\n"
  .. "Backslashes need a bit of care.\string\n"
  .. "Sharps and tildes too: # doubled, but \string# and \string~")
  % a tex comment: no easy way to get a %
  tex.sprint("\string\\pi \string\\neq", tostring(math.pi))
  % we can use TeX macros
  tex.sprint("-", math.sqrt(\foo))
}
---------------------------
(document
  (lua
    (lua_cs)
    (text_group
      (begin_group)
      (text)
      (text_group (begin_group) (text) (end_group))
      (text)
      (cs)
      (cs)
      (text)
      (cs)
      (cs)
      (text)
      (cs)
      (text)
      (cs)
      (active_char)
      (text (comment))
      (cs)
      (escaped)
      (text)
      (cs)
      (escaped)
      (text (comment))
      (cs)
      (text)
      (end_group))))

========================
latelua with number
=======================
\latelua"7F{
  texio.write_nl("Special chars: _ ^ & $ { } working.\string\n"
  .. "Backslashes need a bit of care.\string\n"
  .. "Sharps and tildes too: # doubled, but \string# and \string~")
  % a tex comment: no easy way to get a %
  tex.sprint("\string\\pi \string\\neq", tostring(math.pi))
  % we can use TeX macros
  tex.sprint("-", math.sqrt(\foo))
}
---------------------------
(document
  (lua
    (lua_cs)
    (hexadecimal)
    (text_group
      (begin_group)
      (text)
      (text_group (begin_group) (text) (end_group))
      (text)
      (cs)
      (cs)
      (text)
      (cs)
      (cs)
      (text)
      (cs)
      (text)
      (cs)
      (active_char)
      (text (comment))
      (cs)
      (escaped)
      (text)
      (cs)
      (escaped)
      (text (comment))
      (cs)
      (text)
      (end_group))))

========================
luadirect
=======================
\luadirect{
  texio.write_nl("Special chars: _ ^ & $ { } working.\string\n"
  .. "Backslashes need a bit of care.\string\n"
  .. "Sharps and tildes too: # doubled, but \string# and \string~")
  % a tex comment: no easy way to get a %
  tex.sprint("\string\\pi \string\\neq", tostring(math.pi))
  % we can use TeX macros
  tex.sprint("-", math.sqrt(\foo))
}
---------------------------
(document
  (luadirect
    (luadirect_cs)
    (text_group
      (begin_group)
      (text)
      (text_group (begin_group) (text) (end_group))
      (text)
      (cs)
      (cs)
      (text)
      (cs)
      (cs)
      (text)
      (cs)
      (text)
      (cs)
      (active_char)
      (text (comment))
      (cs)
      (escaped)
      (text)
      (cs)
      (escaped)
      (text (comment))
      (cs)
      (text)
      (end_group))))

=======================
luaexec
=======================
\luaexec{
  texio.write_nl("Special chars: _ ^ & $ { } ~ working.\string\n"
  .. "Backslashes still need a bit of care.\string\n"
  .. "Single sharps are easier now: \#")
  % a tex comment: we also get a % below
  tex.sprint("\\pi \\neq ", tostring(math.pi):gsub(’\%.’, ’+’))
  % we can use TeX macros
  tex.sprint("-", math.sqrt(\foo))
}
----------------------------
(document
  (luaexec
    (luaexec_cs)
    (text_group
      (begin_group)
      (text)
      (text_group (begin_group) (text) (end_group))
      (text)
      (cs)
      (cs)
      (text)
      (cs)
      (cs)
      (text)
      (cs)
      (text (comment))
      (escaped)
      (text)
      (escaped)
      (text)
      (escaped)
      (text (comment))
      (cs)
      (text)
      (end_group))))

=================
luacode environment
===================
\begin{luacode}
  texio.write_nl("Special chars: _ ^ & $ { } ~ # % working.\string\n"
  .. "Only backslashes still need a bit of care.\string\n")
  -- a lua comment: we could use \% below, too
  tex.sprint("\\pi \\neq ", tostring(math.pi):gsub(’%.’, ’+’))
  -- we can use TeX macros
  tex.sprint("-", math.sqrt(\foo))
\end{luacode}
---------------------
(document
  (luacode_env
    (luacode_begin (begin_cs) (luacode_env_group (begin_group) (luacode_env_name) (end_group)))
    (text)
    (text_group (begin_group) (text) (end_group))
    (text)
    (cs)
    (cs)
    (text)
    (cs)
    (cs)
    (text)
    (cs)
    (text)
    (escaped)
    (text)
    (escaped)
    (text)
    (cs)
    (text)
    (luacode_end (end_cs) (luacode_env_group (begin_group) (luacode_env_name) (end_group)))))


==========================
luacode* environment
==========================
\begin{luacode*}
  texio.write_nl("Special chars: _ ^ & $ { } ~ # % \\ working.\n")
  -- a lua comment: the backlash is doubled as in normal Lua code
  tex.sprint("\\pi \\neq ", tostring(math.pi):gsub(’%.’, ’+’))
  -- no way to use a TeX variable here
\end{luacode*}
-----------------------------
(document
  (luacodestar_env
    (luacodestar_begin
      (begin_cs)
      (luacodestar_env_group (begin_group) (luacodestar_env_name) (end_group)) (eol))
    (lua_text)
    (luacodestar_end (end_cs)
      (luacodestar_env_group (begin_group) (luacodestar_env_name) (end_group)))))
